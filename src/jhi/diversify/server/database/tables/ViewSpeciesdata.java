/*
 * This file is generated by jOOQ.
 */
package jhi.diversify.server.database.tables;


import org.jooq.*;
import org.jooq.impl.*;

import javax.annotation.*;

import jhi.diversify.server.database.*;
import jhi.diversify.server.database.tables.records.*;


/**
 * VIEW
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.9"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ViewSpeciesdata extends TableImpl<ViewSpeciesdataRecord> {

    /**
     * The reference instance of <code>diversify3.view_speciesdata</code>
     */
    public static final ViewSpeciesdata VIEW_SPECIESDATA = new ViewSpeciesdata();
    private static final long serialVersionUID = -1411056557;
    /**
     * The column <code>diversify3.view_speciesdata.traitid</code>.
     */
    public final TableField<ViewSpeciesdataRecord, Integer> TRAITID = createField("traitid", org.jooq.impl.SQLDataType.INTEGER.defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "");
    /**
     * The column <code>diversify3.view_speciesdata.traitname</code>.
     */
    public final TableField<ViewSpeciesdataRecord, String> TRAITNAME = createField("traitname", org.jooq.impl.SQLDataType.VARCHAR(255), this, "");
    /**
     * The column <code>diversify3.view_speciesdata.traitcode</code>.
     */
    public final TableField<ViewSpeciesdataRecord, String> TRAITCODE = createField("traitcode", org.jooq.impl.SQLDataType.VARCHAR(255), this, "");
    /**
     * The column <code>diversify3.view_speciesdata.varietyid</code>.
     */
    public final TableField<ViewSpeciesdataRecord, Integer> VARIETYID = createField("varietyid", org.jooq.impl.SQLDataType.INTEGER.defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "");
    /**
     * The column <code>diversify3.view_speciesdata.varietyname</code>.
     */
    public final TableField<ViewSpeciesdataRecord, String> VARIETYNAME = createField("varietyname", org.jooq.impl.SQLDataType.VARCHAR(255), this, "");
    /**
     * The column <code>diversify3.view_speciesdata.value</code>.
     */
    public final TableField<ViewSpeciesdataRecord, String> VALUE = createField("value", org.jooq.impl.SQLDataType.VARCHAR(255).nullable(false), this, "");

    /**
     * Create a <code>diversify3.view_speciesdata</code> table reference
     */
    public ViewSpeciesdata() {
        this(DSL.name("view_speciesdata"), null);
    }

    /**
     * Create an aliased <code>diversify3.view_speciesdata</code> table reference
     */
    public ViewSpeciesdata(String alias) {
        this(DSL.name(alias), VIEW_SPECIESDATA);
    }

    /**
     * Create an aliased <code>diversify3.view_speciesdata</code> table reference
     */
    public ViewSpeciesdata(Name alias) {
        this(alias, VIEW_SPECIESDATA);
    }

    private ViewSpeciesdata(Name alias, Table<ViewSpeciesdataRecord> aliased) {
        this(alias, aliased, null);
    }

    private ViewSpeciesdata(Name alias, Table<ViewSpeciesdataRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment("VIEW"));
    }

    public <O extends Record> ViewSpeciesdata(Table<O> child, ForeignKey<O, ViewSpeciesdataRecord> key) {
        super(child, key, VIEW_SPECIESDATA);
    }

    /**
     * The class holding records for this type
     */
    @Override
    public Class<ViewSpeciesdataRecord> getRecordType() {
        return ViewSpeciesdataRecord.class;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Diversify3.DIVERSIFY3;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ViewSpeciesdata as(String alias) {
        return new ViewSpeciesdata(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ViewSpeciesdata as(Name alias) {
        return new ViewSpeciesdata(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public ViewSpeciesdata rename(String name) {
        return new ViewSpeciesdata(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public ViewSpeciesdata rename(Name name) {
        return new ViewSpeciesdata(name, null);
    }
}

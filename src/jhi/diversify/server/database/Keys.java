/*
 * This file is generated by jOOQ.
 */
package jhi.diversify.server.database;


import org.jooq.*;
import org.jooq.impl.*;

import javax.annotation.*;

import jhi.diversify.server.database.tables.*;
import jhi.diversify.server.database.tables.records.*;


/**
 * A class modelling foreign key relationships and constraints of tables of 
 * the <code>diversify3</code> schema.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.9"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

    // -------------------------------------------------------------------------
    // IDENTITY definitions
    // -------------------------------------------------------------------------

    public static final Identity<CropsRecord, Integer> IDENTITY_CROPS = Identities0.IDENTITY_CROPS;
    public static final Identity<DatasetsRecord, Integer> IDENTITY_DATASETS = Identities0.IDENTITY_DATASETS;
    public static final Identity<PartnersRecord, Integer> IDENTITY_PARTNERS = Identities0.IDENTITY_PARTNERS;
    public static final Identity<PlantpartnersRecord, Integer> IDENTITY_PLANTPARTNERS = Identities0.IDENTITY_PLANTPARTNERS;
    public static final Identity<PlotdataRecord, Integer> IDENTITY_PLOTDATA = Identities0.IDENTITY_PLOTDATA;
    public static final Identity<PlotsRecord, Integer> IDENTITY_PLOTS = Identities0.IDENTITY_PLOTS;
    public static final Identity<SitesRecord, Integer> IDENTITY_SITES = Identities0.IDENTITY_SITES;
    public static final Identity<SpeciesdataRecord, Integer> IDENTITY_SPECIESDATA = Identities0.IDENTITY_SPECIESDATA;
    public static final Identity<TraitsRecord, Integer> IDENTITY_TRAITS = Identities0.IDENTITY_TRAITS;
    public static final Identity<VarietiesRecord, Integer> IDENTITY_VARIETIES = Identities0.IDENTITY_VARIETIES;
    public static final Identity<VarietyinplotRecord, Integer> IDENTITY_VARIETYINPLOT = Identities0.IDENTITY_VARIETYINPLOT;

    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<CropsRecord> KEY_CROPS_PRIMARY = UniqueKeys0.KEY_CROPS_PRIMARY;
    public static final UniqueKey<DatasetsRecord> KEY_DATASETS_PRIMARY = UniqueKeys0.KEY_DATASETS_PRIMARY;
    public static final UniqueKey<PartnersRecord> KEY_PARTNERS_PRIMARY = UniqueKeys0.KEY_PARTNERS_PRIMARY;
    public static final UniqueKey<PlantpartnersRecord> KEY_PLANTPARTNERS_PRIMARY = UniqueKeys0.KEY_PLANTPARTNERS_PRIMARY;
    public static final UniqueKey<PlotdataRecord> KEY_PLOTDATA_PRIMARY = UniqueKeys0.KEY_PLOTDATA_PRIMARY;
    public static final UniqueKey<PlotsRecord> KEY_PLOTS_PRIMARY = UniqueKeys0.KEY_PLOTS_PRIMARY;
    public static final UniqueKey<SitesRecord> KEY_SITES_PRIMARY = UniqueKeys0.KEY_SITES_PRIMARY;
    public static final UniqueKey<SpeciesdataRecord> KEY_SPECIESDATA_PRIMARY = UniqueKeys0.KEY_SPECIESDATA_PRIMARY;
    public static final UniqueKey<TraitsRecord> KEY_TRAITS_PRIMARY = UniqueKeys0.KEY_TRAITS_PRIMARY;
    public static final UniqueKey<VarietiesRecord> KEY_VARIETIES_PRIMARY = UniqueKeys0.KEY_VARIETIES_PRIMARY;
    public static final UniqueKey<VarietyinplotRecord> KEY_VARIETYINPLOT_PRIMARY = UniqueKeys0.KEY_VARIETYINPLOT_PRIMARY;

    // -------------------------------------------------------------------------
    // FOREIGN KEY definitions
    // -------------------------------------------------------------------------

    public static final ForeignKey<CropsRecord, PlantpartnersRecord> CROPS_IBFK_1 = ForeignKeys0.CROPS_IBFK_1;
    public static final ForeignKey<PlotdataRecord, DatasetsRecord> PLOTDATA_IBFK_3 = ForeignKeys0.PLOTDATA_IBFK_3;
    public static final ForeignKey<PlotdataRecord, PlotsRecord> PLOTDATA_IBFK_1 = ForeignKeys0.PLOTDATA_IBFK_1;
    public static final ForeignKey<PlotdataRecord, TraitsRecord> PLOTDATA_IBFK_2 = ForeignKeys0.PLOTDATA_IBFK_2;
    public static final ForeignKey<PlotsRecord, SitesRecord> PLOTS_IBFK_1 = ForeignKeys0.PLOTS_IBFK_1;
    public static final ForeignKey<SitesRecord, PartnersRecord> SITES_IBFK_1 = ForeignKeys0.SITES_IBFK_1;
    public static final ForeignKey<SpeciesdataRecord, DatasetsRecord> SPECIESDATA_IBFK_3 = ForeignKeys0.SPECIESDATA_IBFK_3;
    public static final ForeignKey<SpeciesdataRecord, TraitsRecord> SPECIESDATA_IBFK_1 = ForeignKeys0.SPECIESDATA_IBFK_1;
    public static final ForeignKey<SpeciesdataRecord, VarietyinplotRecord> SPECIESDATA_IBFK_2 = ForeignKeys0.SPECIESDATA_IBFK_2;
    public static final ForeignKey<VarietiesRecord, CropsRecord> VARIETIES_IBFK_1 = ForeignKeys0.VARIETIES_IBFK_1;
    public static final ForeignKey<VarietyinplotRecord, PlotsRecord> VARIETYINPLOT_IBFK_1 = ForeignKeys0.VARIETYINPLOT_IBFK_1;
    public static final ForeignKey<VarietyinplotRecord, VarietiesRecord> VARIETYINPLOT_IBFK_2 = ForeignKeys0.VARIETYINPLOT_IBFK_2;

    // -------------------------------------------------------------------------
    // [#1459] distribute members to avoid static initialisers > 64kb
    // -------------------------------------------------------------------------

    private static class Identities0 {
        public static Identity<CropsRecord, Integer> IDENTITY_CROPS = Internal.createIdentity(Crops.CROPS, Crops.CROPS.ID);
        public static Identity<DatasetsRecord, Integer> IDENTITY_DATASETS = Internal.createIdentity(Datasets.DATASETS, Datasets.DATASETS.ID);
        public static Identity<PartnersRecord, Integer> IDENTITY_PARTNERS = Internal.createIdentity(Partners.PARTNERS, Partners.PARTNERS.ID);
        public static Identity<PlantpartnersRecord, Integer> IDENTITY_PLANTPARTNERS = Internal.createIdentity(Plantpartners.PLANTPARTNERS, Plantpartners.PLANTPARTNERS.ID);
        public static Identity<PlotdataRecord, Integer> IDENTITY_PLOTDATA = Internal.createIdentity(Plotdata.PLOTDATA, Plotdata.PLOTDATA.ID);
        public static Identity<PlotsRecord, Integer> IDENTITY_PLOTS = Internal.createIdentity(Plots.PLOTS, Plots.PLOTS.ID);
        public static Identity<SitesRecord, Integer> IDENTITY_SITES = Internal.createIdentity(Sites.SITES, Sites.SITES.ID);
        public static Identity<SpeciesdataRecord, Integer> IDENTITY_SPECIESDATA = Internal.createIdentity(Speciesdata.SPECIESDATA, Speciesdata.SPECIESDATA.ID);
        public static Identity<TraitsRecord, Integer> IDENTITY_TRAITS = Internal.createIdentity(Traits.TRAITS, Traits.TRAITS.ID);
        public static Identity<VarietiesRecord, Integer> IDENTITY_VARIETIES = Internal.createIdentity(Varieties.VARIETIES, Varieties.VARIETIES.ID);
        public static Identity<VarietyinplotRecord, Integer> IDENTITY_VARIETYINPLOT = Internal.createIdentity(Varietyinplot.VARIETYINPLOT, Varietyinplot.VARIETYINPLOT.ID);
    }

    private static class UniqueKeys0 {
        public static final UniqueKey<CropsRecord> KEY_CROPS_PRIMARY = Internal.createUniqueKey(Crops.CROPS, "KEY_crops_PRIMARY", Crops.CROPS.ID);
        public static final UniqueKey<DatasetsRecord> KEY_DATASETS_PRIMARY = Internal.createUniqueKey(Datasets.DATASETS, "KEY_datasets_PRIMARY", Datasets.DATASETS.ID);
        public static final UniqueKey<PartnersRecord> KEY_PARTNERS_PRIMARY = Internal.createUniqueKey(Partners.PARTNERS, "KEY_partners_PRIMARY", Partners.PARTNERS.ID);
        public static final UniqueKey<PlantpartnersRecord> KEY_PLANTPARTNERS_PRIMARY = Internal.createUniqueKey(Plantpartners.PLANTPARTNERS, "KEY_plantpartners_PRIMARY", Plantpartners.PLANTPARTNERS.ID);
        public static final UniqueKey<PlotdataRecord> KEY_PLOTDATA_PRIMARY = Internal.createUniqueKey(Plotdata.PLOTDATA, "KEY_plotdata_PRIMARY", Plotdata.PLOTDATA.ID);
        public static final UniqueKey<PlotsRecord> KEY_PLOTS_PRIMARY = Internal.createUniqueKey(Plots.PLOTS, "KEY_plots_PRIMARY", Plots.PLOTS.ID);
        public static final UniqueKey<SitesRecord> KEY_SITES_PRIMARY = Internal.createUniqueKey(Sites.SITES, "KEY_sites_PRIMARY", Sites.SITES.ID);
        public static final UniqueKey<SpeciesdataRecord> KEY_SPECIESDATA_PRIMARY = Internal.createUniqueKey(Speciesdata.SPECIESDATA, "KEY_speciesdata_PRIMARY", Speciesdata.SPECIESDATA.ID);
        public static final UniqueKey<TraitsRecord> KEY_TRAITS_PRIMARY = Internal.createUniqueKey(Traits.TRAITS, "KEY_traits_PRIMARY", Traits.TRAITS.ID);
        public static final UniqueKey<VarietiesRecord> KEY_VARIETIES_PRIMARY = Internal.createUniqueKey(Varieties.VARIETIES, "KEY_varieties_PRIMARY", Varieties.VARIETIES.ID);
        public static final UniqueKey<VarietyinplotRecord> KEY_VARIETYINPLOT_PRIMARY = Internal.createUniqueKey(Varietyinplot.VARIETYINPLOT, "KEY_varietyinplot_PRIMARY", Varietyinplot.VARIETYINPLOT.ID);
    }

    private static class ForeignKeys0 {
        public static final ForeignKey<CropsRecord, PlantpartnersRecord> CROPS_IBFK_1 = Internal.createForeignKey(jhi.diversify.server.database.Keys.KEY_PLANTPARTNERS_PRIMARY, Crops.CROPS, "crops_ibfk_1", Crops.CROPS.PLANTPARTNER_ID);
        public static final ForeignKey<PlotdataRecord, DatasetsRecord> PLOTDATA_IBFK_3 = Internal.createForeignKey(jhi.diversify.server.database.Keys.KEY_DATASETS_PRIMARY, Plotdata.PLOTDATA, "plotdata_ibfk_3", Plotdata.PLOTDATA.DATASET_ID);
        public static final ForeignKey<PlotdataRecord, PlotsRecord> PLOTDATA_IBFK_1 = Internal.createForeignKey(jhi.diversify.server.database.Keys.KEY_PLOTS_PRIMARY, Plotdata.PLOTDATA, "plotdata_ibfk_1", Plotdata.PLOTDATA.PLOT_ID);
        public static final ForeignKey<PlotdataRecord, TraitsRecord> PLOTDATA_IBFK_2 = Internal.createForeignKey(jhi.diversify.server.database.Keys.KEY_TRAITS_PRIMARY, Plotdata.PLOTDATA, "plotdata_ibfk_2", Plotdata.PLOTDATA.TRAIT_ID);
        public static final ForeignKey<PlotsRecord, SitesRecord> PLOTS_IBFK_1 = Internal.createForeignKey(jhi.diversify.server.database.Keys.KEY_SITES_PRIMARY, Plots.PLOTS, "plots_ibfk_1", Plots.PLOTS.SITE_ID);
        public static final ForeignKey<SitesRecord, PartnersRecord> SITES_IBFK_1 = Internal.createForeignKey(jhi.diversify.server.database.Keys.KEY_PARTNERS_PRIMARY, Sites.SITES, "sites_ibfk_1", Sites.SITES.PARTNER_ID);
        public static final ForeignKey<SpeciesdataRecord, DatasetsRecord> SPECIESDATA_IBFK_3 = Internal.createForeignKey(jhi.diversify.server.database.Keys.KEY_DATASETS_PRIMARY, Speciesdata.SPECIESDATA, "speciesdata_ibfk_3", Speciesdata.SPECIESDATA.DATASET_ID);
        public static final ForeignKey<SpeciesdataRecord, TraitsRecord> SPECIESDATA_IBFK_1 = Internal.createForeignKey(jhi.diversify.server.database.Keys.KEY_TRAITS_PRIMARY, Speciesdata.SPECIESDATA, "speciesdata_ibfk_1", Speciesdata.SPECIESDATA.TRAIT_ID);
        public static final ForeignKey<SpeciesdataRecord, VarietyinplotRecord> SPECIESDATA_IBFK_2 = Internal.createForeignKey(jhi.diversify.server.database.Keys.KEY_VARIETYINPLOT_PRIMARY, Speciesdata.SPECIESDATA, "speciesdata_ibfk_2", Speciesdata.SPECIESDATA.VARIETYINPLOT_ID);
        public static final ForeignKey<VarietiesRecord, CropsRecord> VARIETIES_IBFK_1 = Internal.createForeignKey(jhi.diversify.server.database.Keys.KEY_CROPS_PRIMARY, Varieties.VARIETIES, "varieties_ibfk_1", Varieties.VARIETIES.CROP_ID);
        public static final ForeignKey<VarietyinplotRecord, PlotsRecord> VARIETYINPLOT_IBFK_1 = Internal.createForeignKey(jhi.diversify.server.database.Keys.KEY_PLOTS_PRIMARY, Varietyinplot.VARIETYINPLOT, "varietyinplot_ibfk_1", Varietyinplot.VARIETYINPLOT.PLOT_ID);
        public static final ForeignKey<VarietyinplotRecord, VarietiesRecord> VARIETYINPLOT_IBFK_2 = Internal.createForeignKey(jhi.diversify.server.database.Keys.KEY_VARIETIES_PRIMARY, Varietyinplot.VARIETYINPLOT, "varietyinplot_ibfk_2", Varietyinplot.VARIETYINPLOT.VARIETY_ID);
    }
}
